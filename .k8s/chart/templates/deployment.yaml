apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "auth.name" . }}
    helm.sh/chart: {{ include "auth.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "auth.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "auth.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.28
          command: ['sh', '-c', 'until nslookup {{ .Values.cassandra.host }}; do echo waiting for data base; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:

            {{if .Values.app.setSecrets}}
            - name: AUTH_ENCODER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-encoder
                  key: encoderPassword
            - name: AUTH_ENCODER_SALT
              valueFrom:
                secretKeyRef:
                  name: auth-encoder
                  key: encoderSalt
            - name: AUTH_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-encoder
                  key: jwtSecret
            {{end}}

            - name: SPRING_DATA_CASSANDRA_CONTACTPOINTS
              value: {{ .Values.cassandra.host }}
            - name: SPRING_DATA_CASSANDRA_PORT
              value: "9042"
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.app.profile }}

          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          {{/*livenessProbe:*/}}
            {{/*httpGet:*/}}
              {{/*path: /*/}}
              {{/*port: http*/}}
          {{/*readinessProbe:*/}}
            {{/*httpGet:*/}}
              {{/*path: /*/}}
              {{/*port: http*/}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
