{
  "properties": [
    {
      "name": "auth.frontend-origin",
      "type": "java.lang.String",
      "description": "Frontend origin for CORS policy."
    },
    {
      "name": "auth.route.register",
      "type": "java.lang.String",
      "description": "Endpoint for register user."
    },
    {
      "name": "auth.route.social-login",
      "type": "java.lang.String",
      "description": "Endpoint for login with social data."
    },
    {
      "name": "auth.route.login",
      "type": "java.lang.String",
      "description": "Endpoint for user login."
    },
    {
      "name": "auth.encoder.password",
      "type": "java.lang.String",
      "description": "Password for password encoder, any value is suitable."
    },
    {
      "name": "auth.encoder.salt",
      "type": "java.lang.String",
      "description": "Salt, length % 2 == 0 , only hex characters(a-f) and numbers."
    },
    {
      "name": "auth.jwt.secret",
      "type": "java.lang.String",
      "description": "Signing key for jwt token."
    },
    {
      "name": "auth.jwt.header",
      "type": "java.lang.String",
      "description": "Header that must be in a request, where token is."
    },
    {
      "name": "auth.jwt.expiration",
      "type": "java.lang.String",
      "description": "Token TTL before expire."
    },
    {
      "name": "auth.auth-details-impl",
      "type": "java.lang.String",
      "description": "Implementation of AuthDetails that is deserialized from request body from frontend."
    },
    {
      "name": "auth.wt-user-impl",
      "type": "java.lang.String",
      "description": "WTUserDetails implementation."
    }
  ]
}